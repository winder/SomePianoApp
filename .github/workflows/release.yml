# Publishing artifacts from a build matrix isn't totally supported.
# This uses a trick shared on github:
#       https://github.com/actions/create-release/issues/14#issuecomment-653974075
# There are several other options discussed in the o pen issue:
#       https://github.com/actions/create-release/issues/14
name: Create Release

on:
  push:
    # Sequence of patterns matched against refs/tags
    tags:
      - 'v*' # Push events to matching v*, i.e. v1.0, v20.15.10

jobs:
  create_release:
    runs-on: ubuntu-latest
    outputs:
      upload_url: ${{ steps.create_release.outputs.upload_url }}
    steps:
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
          draft: false
          prerelease: false


  build_release:
    name: Create Release
    needs: create_release
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [macos-latest, ubuntu-latest]
        include:
          - os: macos-latest
            TYPE: pkg
            ARTIFACT: SomePianoApp.app
            PACKAGE_NAME: SomePianoApp.MacOS.tar.gz
          - os: ubuntu-latest
            TYPE: deb
            ARTIFACT: somepianoapp_*.deb
            PACKAGE_NAME: SomePianoApp.Linux-deb.tar.gz
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-java@v1
        with:
          java-version: '15'
          java-package: jdk
          architecture: x64
      - name: Build
        run: |
          ./gradlew --info -PinstallerType=${{matrix.TYPE}} clean jpackage
          cd build/jpackage && tar -czvf ../../${{matrix.PACKAGE_NAME}} ${{matrix.ARTIFACT}}

      - name: Upload
        id: upload-release-asset 
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ needs.create_release.outputs.upload_url }}
          asset_path: ./${{ matrix.PACKAGE_NAME }}
          asset_name: ${{ matrix.PACKAGE_NAME }}
          asset_content_type: application/gzip

